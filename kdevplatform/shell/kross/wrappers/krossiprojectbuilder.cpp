//This is file has been generated by xmltokross, you should not edit this file but the files used to generate it.

#include <QtCore/QObject>
#include <QtCore/QVariant>
#include <kross/core/manager.h>
#include <kross/core/wrapperinterface.h>
#include <project/interfaces/iprojectbuilder.h>

class KrossKDevelopIProjectBuilder : public QObject, public Kross::WrapperInterface
{
	Q_OBJECT
	public:
		KrossKDevelopIProjectBuilder(KDevelop::IProjectBuilder* obj, QObject* parent=0) : QObject(parent), wrapped(obj)		{ setObjectName("KDevelop::IProjectBuilder"); }
		void* wrappedObject() const { return wrapped; }

		Q_SCRIPTABLE KJob* install(KDevelop::ProjectBaseItem* x0) { return wrapped->install(x0); }
		Q_SCRIPTABLE KJob* build(KDevelop::ProjectBaseItem* x0) { return wrapped->build(x0); }
		Q_SCRIPTABLE KJob* clean(KDevelop::ProjectBaseItem* x0) { return wrapped->clean(x0); }
		Q_SCRIPTABLE KJob* configure(KDevelop::IProject* x0) { return wrapped->configure(x0); }
		Q_SCRIPTABLE KJob* prune(KDevelop::IProject* x0) { return wrapped->prune(x0); }
	private:
		KDevelop::IProjectBuilder* wrapped;
};

bool krossiprojectbuilder_registerHandler(const QByteArray& name, Kross::MetaTypeHandler::FunctionPtr* handler)
{ Kross::Manager::self().registerMetaTypeHandler(name, handler); return false; }

namespace Handlers
{
QVariant _kDevelopIProjectBuilderHandler(void* type)
{
	if(!type) return QVariant();
	KDevelop::IProjectBuilder* t=static_cast<KDevelop::IProjectBuilder*>(type);
	Q_ASSERT(dynamic_cast<KDevelop::IProjectBuilder*>(t));
	return qVariantFromValue((QObject*) new KrossKDevelopIProjectBuilder(t, 0));
}
bool b_KDevelopIProjectBuilder1=krossiprojectbuilder_registerHandler("IProjectBuilder*", _kDevelopIProjectBuilderHandler);
bool b_KDevelopIProjectBuilder=krossiprojectbuilder_registerHandler("KDevelop::IProjectBuilder*", _kDevelopIProjectBuilderHandler);
QVariant kDevelopIProjectBuilderHandler(KDevelop::IProjectBuilder* type){ return _kDevelopIProjectBuilderHandler(type); }
QVariant kDevelopIProjectBuilderHandler(const KDevelop::IProjectBuilder* type) { return _kDevelopIProjectBuilderHandler((void*) type); }

}
#include "krossiprojectbuilder.moc"
